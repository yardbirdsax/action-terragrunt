// Code generated by MockGen. DO NOT EDIT.
// Source: terragrunt.go

// Package terragrunt is a generated GoMock package.
package terragrunt

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	terragrunt "github.com/yardbirdsax/action-terragrunt/internal/terragrunt"
)

// MockTerragrunt is a mock of Terragrunt interface.
type MockTerragrunt struct {
	ctrl     *gomock.Controller
	recorder *MockTerragruntMockRecorder
}

// MockTerragruntMockRecorder is the mock recorder for MockTerragrunt.
type MockTerragruntMockRecorder struct {
	mock *MockTerragrunt
}

// NewMockTerragrunt creates a new mock instance.
func NewMockTerragrunt(ctrl *gomock.Controller) *MockTerragrunt {
	mock := &MockTerragrunt{ctrl: ctrl}
	mock.recorder = &MockTerragruntMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTerragrunt) EXPECT() *MockTerragruntMockRecorder {
	return m.recorder
}

// Apply mocks base method.
func (m *MockTerragrunt) Apply() (*terragrunt.TerragruntApplyOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Apply")
	ret0, _ := ret[0].(*terragrunt.TerragruntApplyOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Apply indicates an expected call of Apply.
func (mr *MockTerragruntMockRecorder) Apply() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Apply", reflect.TypeOf((*MockTerragrunt)(nil).Apply))
}

// Plan mocks base method.
func (m *MockTerragrunt) Plan() (*terragrunt.TerragruntPlanOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Plan")
	ret0, _ := ret[0].(*terragrunt.TerragruntPlanOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Plan indicates an expected call of Plan.
func (mr *MockTerragruntMockRecorder) Plan() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Plan", reflect.TypeOf((*MockTerragrunt)(nil).Plan))
}
